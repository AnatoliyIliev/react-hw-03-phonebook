{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ElementContactList/ElementContactList.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","state","name","number","nameId","uuidv4","numberId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmitForm","reset","this","className","styles","form","onSubmit","labelName","htmlFor","type","onChange","id","pattern","title","required","labelNumber","button","tupe","Component","Filter","ElementContactList","onDeleteContact","ContactList_name","onClick","ContactList","contacts","contactList","map","contactList_items","App","filter","formSubmitHandler","text","contactsId","add","contact","toLowerCase","includes","length","alert","changeFilter","e","getVisibleContacts","normalizedFilter","deleteContacts","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","console","log","prevProps","nextContacts","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ed39bcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"Filter_labelName__2hR5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__DfITa\",\"form\":\"ContactForm_form__u7CwR\",\"labelName\":\"ContactForm_labelName__1hlqn\",\"labelNumber\":\"ContactForm_labelNumber__1EHnX\"};","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        \r\n    }\r\n    \r\n    nameId = uuidv4();\r\n    numberId = uuidv4();\r\n    \r\n    handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onSubmitForm(this.state);\r\n\r\n        this.reset();\r\n    };\r\n\r\n  reset = () => {\r\n    this.setState({name: '', number: '',})\r\n    }\r\n    \r\n    render() {\r\n        const { name,  number} = this.state;\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                <label className={styles.labelName} htmlFor={this.nameId}>\r\n                    Name\r\n                    <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    id={this.nameId}\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required              \r\n                    />            \r\n                </label>\r\n                <label className={styles.labelNumber} htmlFor={this.numberId}>\r\n                    Number\r\n                    <input\r\n                    type=\"tel\"\r\n                    value={number}\r\n                    onChange={this.handleChange}\r\n                    id={this.numberId}\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    />\r\n                    </label>\r\n                <button className={styles.button} tupe='submit'>Add contact</button>\r\n            </form>        \r\n        );\r\n    }\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onSubmitForm:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import styles from './Filter.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.labelName}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value:PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\n export default Filter;","import styles from './ElementContactList.module.scss';\r\n\r\n\r\nconst ElementContactList = ({ name, number, onDeleteContact }) => (\r\n    <>\r\n        <span className={styles.ContactList_name}>{name}: {number}</span>\r\n        <button onClick={onDeleteContact}>Delete</button>            \r\n    </>                    \r\n)\r\n\r\nexport default ElementContactList;","import ElementContactList from '../ElementContactList';\r\nimport styles from './ContactList.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (    \r\n    <ul className={styles.contactList}>\r\n        {contacts.map(({id, name, number}) => (\r\n            <li  className={styles.contactList_items} key={id}>\r\n                <ElementContactList\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={()=>onDeleteContact(id)} />\r\n            </li>            \r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n    \r\n    contacts:PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name:PropTypes.string.isRequired,\r\n            id:PropTypes.string.isRequired,\r\n        }).isRequired\r\n    ).isRequired,    \r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  }\r\n  \r\n  //  contacts: [\r\n  //   {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n  //   {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n  //   {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n  //   {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n \r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    console.log(parsedContacts)\r\n    console.log(contacts)\r\n\r\n    if (parsedContacts) {\r\n      console.log('parsedContacts', parsedContacts)\r\n      this.setState({ contacts: parsedContacts });\r\n    }    \r\n  }\r\n  \r\n componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      console.log('Обновилось поле contacts, записываю todos в хранилище');\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n  \r\n  formSubmitHandler = (text) => {\r\n    // console.log('text:', text)\r\n    const contactsId = uuidv4();\r\n    const { contacts } = this.state;\r\n    const add = { id: contactsId, name: text.name, number: text.number };\r\n    \r\n    const filterName = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(text.name.toLowerCase()));\r\n    \r\n    if (filterName.length > 0) {\r\n      alert(`${add.name} is already in contacts!`);\r\n      return;      \r\n    };\r\n    \r\n    this.setState(( {contacts} ) => ({\r\n        contacts: [add, ...contacts]\r\n    }))      \r\n  }\r\n  \r\n  changeFilter = e => {\r\n    // console.log(e.currentTarget.value)\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContacts = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n    const { filter } = this.state;\r\n    // const VisibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1> \r\n        <ContactForm onSubmitForm={ this.formSubmitHandler }/>        \r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={this.getVisibleContacts()}\r\n          onDeleteContact={this.deleteContacts}\r\n        />        \r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './App.scss';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3kAMU\",\"contactList_items\":\"ContactList_contactList_items__3p0t-\"};"],"sourceRoot":""}