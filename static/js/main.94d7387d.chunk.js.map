{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ElementContactList/ElementContactList.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","state","name","number","nameId","uuidv4","numberId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmitForm","reset","this","className","styles","form","onSubmit","labelName","htmlFor","type","onChange","id","pattern","title","required","labelNumber","button","tupe","Component","Filter","ElementContactList","onDeleteContact","ContactList_name","onClick","ContactList","contacts","contactList","map","contactList_items","App","filter","formSubmitHandler","text","contactsId","add","contact","toLowerCase","includes","length","alert","changeFilter","e","getVisibleContacts","normalizedFilter","deleteContacts","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94d7387d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"Filter_labelName__2T5wB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1007G\",\"form\":\"ContactForm_form__1NiH1\",\"labelName\":\"ContactForm_labelName__1lmly\",\"labelNumber\":\"ContactForm_labelNumber__1kfeO\"};","import PropTypes from 'prop-types';\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component{\n    state = {\n        name: '',\n        number: '',\n        \n    }\n    \n    nameId = uuidv4();\n    numberId = uuidv4();\n    \n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.onSubmitForm(this.state);\n\n        this.reset();\n    };\n\n  reset = () => {\n    this.setState({name: '', number: '',})\n    }\n    \n    render() {\n        const { name,  number} = this.state;\n        return (\n            <form className={styles.form} onSubmit={this.handleSubmit}>\n                <label className={styles.labelName} htmlFor={this.nameId}>\n                    Name\n                    <input\n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChange}\n                    id={this.nameId}\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required              \n                    />            \n                </label>\n                <label className={styles.labelNumber} htmlFor={this.numberId}>\n                    Number\n                    <input\n                    type=\"tel\"\n                    value={number}\n                    onChange={this.handleChange}\n                    id={this.numberId}\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    />\n                    </label>\n                <button className={styles.button} tupe='submit'>Add contact</button>\n            </form>        \n        );\n    }\n};\n\nContactForm.propTypes = {\n    onSubmitForm:PropTypes.func.isRequired,\n};\n\nexport default ContactForm;","import styles from './Filter.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.labelName}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value:PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\n export default Filter;","import styles from './ElementContactList.module.scss';\n\n\nconst ElementContactList = ({ name, number, onDeleteContact }) => (\n    <>\n        <span className={styles.ContactList_name}>{name}: {number}</span>\n        <button onClick={onDeleteContact}>Delete</button>            \n    </>                    \n)\n\nexport default ElementContactList;","import ElementContactList from '../ElementContactList';\nimport styles from './ContactList.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (    \n    <ul className={styles.contactList}>\n        {contacts.map(({id, name, number}) => (\n            <li  className={styles.contactList_items} key={id}>\n                <ElementContactList\n                    name={name}\n                    number={number}\n                    onDeleteContact={()=>onDeleteContact(id)} />\n            </li>            \n        ))}\n    </ul>\n);\n\nContactList.propTypes = {\n    \n    contacts:PropTypes.arrayOf(\n        PropTypes.shape({\n            name:PropTypes.string.isRequired,\n            id:PropTypes.string.isRequired,\n        }).isRequired\n    ).isRequired,    \n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nclass App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }  \n \n  formSubmitHandler = (text) => {\n    // console.log('text:', text)\n    const contactsId = uuidv4();\n    const { contacts } = this.state;\n    const add = { id: contactsId, name: text.name, number: text.number };\n    \n    const filterName = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(text.name.toLowerCase()));\n    \n    if (filterName.length > 0) {\n      alert(`${add.name} is already in contacts!`);\n      return;      \n    };\n    \n    this.setState(( {contacts} ) => ({\n        contacts: [add, ...contacts]\n    }))      \n  }\n  \n  changeFilter = e => {\n    // console.log(e.currentTarget.value)\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  \n  render() {\n    const { filter } = this.state;\n    // const VisibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1> \n        <ContactForm onSubmitForm={ this.formSubmitHandler }/>        \n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          onDeleteContact={this.deleteContacts}\n        />        \n      </div>\n    );\n  }  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './App.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__9FkvI\",\"contactList_items\":\"ContactList_contactList_items__1hv-I\"};"],"sourceRoot":""}